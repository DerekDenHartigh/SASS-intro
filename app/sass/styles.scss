// variables:
@import './variables.scss';
$chuck_norris: RGB(192, 0, 0); 
$space_purple: 	#591792;

body{
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    background-color: lightcoral;
    color: darkslateblue;
    align-content: center;
    align-items: center;
    justify-content: center;
    justify-items: center;
}

h1{
    display: flex;
    font-size: 3em;
    justify-content: center;
    justify-items: center;
    align-content: center;
    align-items: center;
    border: solid $chuck_norris 5px;
    border-radius: 5px;
    padding: 10px;
}

//mixins:

@mixin sample-mixin {
    color: $space_purple;
    border: 2px solid black;
    border-radius: 5px;
    background-color: $chuck_norris;
 }

p{
    padding: 5px;
    display: flex;
    font-size: 2em;
    @include sample-mixin;
}

// nesting example:

nav{
    //this styling applies to nav container
    ul{
        //this stying only applies to ul w/in nav
        li{
            //this styling only applies to list items w/in unordered list, w/in the nav component
            a{
                //this styling would only affect the links
            }
        }
    }
}
 

@function tickleMePink(){
    @return pink;
    /* I could do thinks like light + $color,
    where color would be my argument
    then blue would become lightblue */
}

@function percentageOfBox($size){
    @return calc(100% - #{size}px);
    //#{} is the same for SASS what ${} for JS
}

#pink{
    color: tickleMePink();
}

@function marginCenter($vertical){
    @return auto #{$vertical}px;
}

#margins{
    margin: marginCenter(100px);
    background-color: black;
}

@function superPad($padding){
    @return calc($padding*10)px;
}

#padded{
    color: $imported_yellow;
    padding: superPad(10);
}